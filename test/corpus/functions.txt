================================================================
Function Declaration
================================================================

module Main exposing (..)
    foreign sqrt(x : Float) -> Float =
        "c_sqrt"

    let double(x : Int) -> Int =
        x * 2

    let id(x) =
        x
end

----------------------------------------------------------------

(source_file
  (module_declaration
    (qualified_module
      (upper_identifier))
    (exposing_list
      (expose_everything))
    (statement
      (foreign_function_declaration
        (lower_identifier)
        (parameter_list
          (lower_identifier)
          (type_annotation
            (type_expression
              (upper_identifier))))
        (return_type
          (type_expression
            (upper_identifier)))
        (string_literal)))
    (statement
      (function_declaration
        (lower_identifier)
        (parameter_list
          (lower_identifier)
          (type_annotation
            (type_expression
              (upper_identifier))))
        (return_type
          (type_expression
            (upper_identifier)))
        (binary_expression
          (lower_identifier)
          (integer_literal))))
    (statement
      (function_declaration
        (lower_identifier)
        (parameter_list
          (lower_identifier))
        (lower_identifier)))))

================================================================
Function Call
================================================================

module Main exposing (..)
    let apply(f, x) =
        f(x)

    let c() =
        add(1, 2)

    let h() =
        f(g(5))
end

----------------------------------------------------------------

(source_file
  (module_declaration
    (qualified_module
      (upper_identifier))
    (exposing_list
      (expose_everything))
    (statement
      (function_declaration
        (lower_identifier)
        (parameter_list
          (lower_identifier)
          (lower_identifier))
        (function_call
          (lower_identifier)
          (lower_identifier))))
    (statement
      (function_declaration
        (lower_identifier)
        (function_call
          (lower_identifier)
          (integer_literal)
          (integer_literal))))
    (statement
      (function_declaration
        (lower_identifier)
        (function_call
          (lower_identifier)
          (function_call
            (lower_identifier)
            (integer_literal)))))))
